name: Persubmit Checks
on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build_and_test_cpu:
    name: Build and Test (Mac)
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'skip ci') && github.event.sender.login != 'taichi-gardener' }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            python: 3.7
            with_cc: OFF
            with_cpp_tests: ON
    runs-on: [mac-mini-m1]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Download Pre-Built LLVM 10.0.0
        run: |
          python misc/ci_download.py
          mkdir taichi-llvm
          cd taichi-llvm
          unzip ../taichi-llvm.zip
        env:
          CI_PLATFORM: ${{ matrix.os }}

      - name: Build
        run: |
          export TAICHI_REPO_DIR=`pwd`
          export PATH=$TAICHI_REPO_DIR/taichi-llvm/bin/:$PATH
          export CXX=clang++
          python misc/ci_setup.py ci
        env:
          CI_SETUP_CMAKE_ARGS: -DTI_WITH_OPENGL:BOOL=OFF -DTI_WITH_CC:BOOL=${{ matrix.with_cc }} -DTI_BUILD_TESTS:BOOL=${{ matrix.with_cpp_tests }}

      - name: Test
        run: |
          export TAICHI_REPO_DIR=`pwd`
          export PATH=$TAICHI_REPO_DIR/bin:$PATH
          export PATH=$TAICHI_REPO_DIR/taichi-llvm/bin/:$PATH
          export PYTHONPATH=$TAICHI_REPO_DIR/python
          python examples/laplace.py
          ti diagnose
          [ "$RUN_CPP_TESTS" = "ON" ] && ./build/taichi_cpp_tests
          ti test -vr2 -t2
        env:
          RUN_CPP_TESTS: ${{ matrix.with_cpp_tests }}
